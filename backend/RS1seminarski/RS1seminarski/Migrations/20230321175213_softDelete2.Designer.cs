// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS1seminarski.Data;

#nullable disable

namespace RS1seminarski.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230321175213_softDelete2")]
    partial class softDelete2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<int>("DonatorId")
                        .HasColumnType("int");

                    b.Property<string>("KratakOpis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DonatorId");

                    b.ToTable("Donacije");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrojDonacija")
                        .HasColumnType("int");

                    b.Property<int>("BrojNarudzbi")
                        .HasColumnType("int");

                    b.Property<int>("BrojZvjezdica")
                        .HasColumnType("int");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<string>("SlikaDonatora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDonatora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickiNalogId")
                        .IsUnique();

                    b.HasIndex("OsobaId")
                        .IsUnique();

                    b.ToTable("Donatori");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonacijaId")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DonacijaId")
                        .IsUnique();

                    b.HasIndex("KategorijaId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaIkonice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Kontakt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonatorId")
                        .HasColumnType("int");

                    b.Property<bool>("Dostupan")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAdresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DonatorId")
                        .IsUnique();

                    b.ToTable("Kontakti");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Uloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KorisnickiNalozi");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Slika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Putanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonacijaId");

                    b.ToTable("Slike");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donacija", b =>
                {
                    b.HasOne("RS1seminarski.Modul1.Models.Donator", "Donator")
                        .WithMany("Donacije")
                        .HasForeignKey("DonatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donator");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donator", b =>
                {
                    b.HasOne("RS1seminarski.Modul1.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithOne("Donator")
                        .HasForeignKey("RS1seminarski.Modul1.Models.Donator", "KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1seminarski.Modul1.Models.Osoba", "Osoba")
                        .WithOne("Donator")
                        .HasForeignKey("RS1seminarski.Modul1.Models.Donator", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiNalog");

                    b.Navigation("Osoba");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Item", b =>
                {
                    b.HasOne("RS1seminarski.Modul1.Models.Donacija", "Donacija")
                        .WithOne("Item")
                        .HasForeignKey("RS1seminarski.Modul1.Models.Item", "DonacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1seminarski.Modul1.Models.Kategorija", "Kategorija")
                        .WithMany("Item")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donacija");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Kontakt", b =>
                {
                    b.HasOne("RS1seminarski.Modul1.Models.Donator", "Donator")
                        .WithOne("Kontakt")
                        .HasForeignKey("RS1seminarski.Modul1.Models.Kontakt", "DonatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donator");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Slika", b =>
                {
                    b.HasOne("RS1seminarski.Modul1.Models.Donacija", "Donacija")
                        .WithMany("Slike")
                        .HasForeignKey("DonacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donacija");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donacija", b =>
                {
                    b.Navigation("Item")
                        .IsRequired();

                    b.Navigation("Slike");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Donator", b =>
                {
                    b.Navigation("Donacije");

                    b.Navigation("Kontakt")
                        .IsRequired();
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Kategorija", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.KorisnickiNalog", b =>
                {
                    b.Navigation("Donator")
                        .IsRequired();
                });

            modelBuilder.Entity("RS1seminarski.Modul1.Models.Osoba", b =>
                {
                    b.Navigation("Donator")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
